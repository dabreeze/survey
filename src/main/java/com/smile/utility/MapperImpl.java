package com.smile.utility;import com.smile.dto.OptionRequestDto;import com.smile.dto.QuestionRequestDto;import com.smile.dto.SurveyRequestDto;import com.smile.dto.SurveyResponseDto;import com.smile.model.Options;import com.smile.model.Questions;import com.smile.model.Survey;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Component;import java.time.LocalDateTime;import java.util.List;@Component@Slf4jpublic class MapperImpl implements Mapper{    @Override    public Survey mapSurveyRequestToSurvey(SurveyRequestDto requestDto) {        log.info("-------> request mapper comes here");        Survey survey = new Survey();        survey.setTitle(requestDto.getTitle());        survey.setBatchNumber(SurveyHelper.createBatchNumber());        survey.setTimeCreated(LocalDateTime.now());        survey.setListOfQuestions(List.of(mapQuestionRequestToQuestion(requestDto.getQuestion())));//        survey.setOptions(requestDto.getOptions());        log.info("-------> mapped request to survey ");        return survey;    }    @Override    public SurveyResponseDto mapSurveyToSurveyResponse(Survey survey) {        log.info("-------> mapping survey to survey response comes here");        SurveyResponseDto responseDto = new SurveyResponseDto();        responseDto.setBatchNumber(survey.getBatchNumber());        responseDto.setDateCreated(LocalDateTime.now());        responseDto.setMessage("Survey created Successfully");        log.info("-------> Mapper response successfully ");        return responseDto;    }    @Override    public Questions mapQuestionRequestToQuestion(QuestionRequestDto requestDto) {        return Questions.builder()                .questionTitle(requestDto.getQuestionTitle())                .surveyId(Long.getLong(requestDto.getSurveyId()))                .options(List.of(mapOptionRequestToOption(requestDto.getOptions())))                .build();//        return null;    }    @Override    public Options mapOptionRequestToOption(OptionRequestDto requestDto) {        return Options.builder()                .opt(requestDto.getOpt())//                .questionId(requestDto.getQuestionId())                .build();    }}